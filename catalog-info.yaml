apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: MERN-blog
  annotations:
    github.com/project-slug: pankaj139/MERN-blog
    backstage.io/techdocs-ref: dir:.
  links:
    - url: https://dashboard.example.com
      title: My Dashboard
      icon: dashboard
spec:
  type: blog
  lifecycle: experimental
  owner: observability
  providesApis: [MERN-Blog-api]
  system: examples
  description: |
    A MERN stack blog application
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: MERN-Blog-api
  description: ALL api related to MERN Blog
spec:
  type: openapi
  lifecycle: production
  owner: observability
  system: examples
  definition: |
    openapi: 3.0.0
    info:
      title: MERN Blog API
      description: API documentation for the MERN Blog application
      version: 1.0.0
      license:
        name: MIT
    servers:
      - url: http://localhost:3000/api
        description: Local server
    paths:
      /user:
        get:
          summary: Get all users
          responses:
            '200':
              description: A list of users
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        post:
          summary: Create a new user
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          responses:
            '201':
              description: User created successfully
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/User'
      /auth/login:
        post:
          summary: User login
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Login'
          responses:
            '200':
              description: Login successful
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/AuthResponse'
      /post:
        get:
          summary: Get all posts
          responses:
            '200':
              description: A list of posts
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
        post:
          summary: Create a new post
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Post'
          responses:
            '201':
              description: Post created successfully
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Post'
      /post/{id}:
        get:
          summary: Get a post by ID
          parameters:
            - in: path
              name: id
              required: true
              schema:
                type: string
          responses:
            '200':
              description: A single post
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Post'
        put:
          summary: Update a post by ID
          parameters:
            - in: path
              name: id
              required: true
              schema:
                type: string
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Post'
          responses:
            '200':
              description: Post updated successfully
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Post'
        delete:
          summary: Delete a post by ID
          parameters:
            - in: path
              name: id
              required: true
              schema:
                type: string
          responses:
            '204':
              description: Post deleted successfully
      /comment:
        get:
          summary: Get all comments
          responses:
            '200':
              description: A list of comments
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
        post:
          summary: Create a new comment
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Comment'
          responses:
            '201':
              description: Comment created successfully
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Comment'
    components:
      schemas:
        User:
          type: object
          properties:
            id:
              type: string
            username:
              type: string
            email:
              type: string
            password:
              type: string
        Login:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
        AuthResponse:
          type: object
          properties:
            token:
              type: string
        Post:
          type: object
          properties:
            id:
              type: string
            title:
              type: string
            content:
              type: string
            author:
              type: string
        Comment:
          type: object
          properties:
            id:
              type: string
            postId:
              type: string
            content:
              type: string
            author:
              type: string
